
GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk3')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(0, 0, 2, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk3', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UXV))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk3')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_PERFECT_SUBTICK])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()  
        .aisle("AAAAAAAACCDDDCCAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAACCDDDCCAAAAAAAA")
        .aisle("AAAAAACCCCCCCCCCCAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAACCCCCCCCCCCAAAAAA")
        .aisle("AAAACCCCCCCCCCCCCCCAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAACCCCCCCCCCCCCCCAAAA")
        .aisle("AAACCCCCCCCCCCCCCCCCAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAACCCCCCCCCCCCCCCCCAAA")
        .aisle("AACCCCCCCCCCCCCCCCCCCAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AACCCCCCCCCCCCCCCCCCCAA")
        .aisle("AACCCCCCCCJJJCCCCCCCCAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAIIAAAIIAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AACCCCCCCCJJJCCCCCCCCAA")
        .aisle("ACCCCCCCCJJFJJCCCCCCCCA", "AGAAAAAAIIAAAIIAAAAAAGA", "AGAAAAAIAAIIIAAIAAAAAGA", "AGAAAAAAIIAAAIIAAAAAAGA", "ACCCCCCCCJJFJJCCCCCCCCA")
        .aisle("ACCCCCCCJJFMFJJCCCCCCCA", "AGAAAAAIAAAAAAAIAAAAAGA", "AGAAAAINIIAOAIINIAAAAGA", "AGAAAAAIAAAAAAAIAAAAAGA", "ACCCCCCCJJFMFJJCCCCCCCA")
        .aisle("CCCCCCCJJFMMMFJJCCCCCCC", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIOAAOAAOIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "CCCCCCCJJFMMMFJJCCCCCCC")
        .aisle("CCCCCCJJFMMMMMFJJCCCCCC", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIAOAOAOAIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "CCCCCCJJFMMMMMFJJCCCCCC")
        .aisle("DCCCCJJFMMMDMMMFJJCCCCD", "FAAAAIAAAAAAAAAAAIAAAAF", "FAAAIAIAAAOOOAAAIAIAAAF", "FAAAAIAAAAAAAAAAAIAAAAF", "DCCCCJJFMMMDMMMFJJCCCCD")
        .aisle("DCCCCJFMMMDDDMMMFJCCCCD", "FAAAAIAAAAAOAAAAAIAAAAF", "FAAAIAIOOOOPOOOOIAIAAAF", "FAAAAIAAAAAOAAAAAIAAAAF", "DCCCCJFMMMDDDMMMFJCCCCD")
        .aisle("DCCCCJJFMMMDMMMFJJCCCCD", "FAAAAIAAAAAAAAAAAIAAAAF", "FAAAIAIAAAOOOAAAIAIAAAF", "FAAAAIAAAAAAAAAAAIAAAAF", "DCCCCJJFMMMDMMMFJJCCCCD")
        .aisle("CCCCCCJJFMMMMMFJJCCCCCC", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIAOAOAOAIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "CCCCCCJJFMMMMMFJJCCCCCC")
        .aisle("CCCCCCCJJFMMMFJJCCCCCCC", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIOAAOAAOIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "CCCCCCCJJFMMMFJJCCCCCCC")
        .aisle("ACCCCCCCJJFMFJJCCCCCCCA", "AGAAAAAIAAAAAAAIAAAAAGA", "AGAAAAINIIAOAIINIAAAAGA", "AGAAAAAIAAAAAAAIAAAAAGA", "ACCCCCCCJJFMFJJCCCCCCCA")
        .aisle("ACCCCCCCCJJFJJCCCCCCCCA", "AGAAAAAAIIAAAIIAAAAAAGA", "AGAAAAAIAAIIIAAIAAAAAGA", "AGAAAAAAIIAAAIIAAAAAAGA", "ACCCCCCCCJJFJJCCCCCCCCA")
        .aisle("AACCCCCCCCJJJCCCCCCCCAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAIIAAAIIAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AACCCCCCCCJJJCCCCCCCCAA")
        .aisle("AACCCCCCCCCCCCCCCCCCCAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AACCCCCCCCCCCCCCCCCCCAA")
        .aisle("AAACCCCCCCCCCCCCCCCCAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAACCCCCCCCCCCCCCCCCAAA")
        .aisle("AAAACCCCCCCCCCCCCCCAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAACCCCCCCCCCCCCCCAAAA")
        .aisle("AAAAAACCCCCCCCCCCAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAACCCCCCCCCCCAAAAAA")
        .aisle("AAAAAAAACCDDDCCAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFRFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAACCDDDCCAAAAAAAA")
           .where("A", Predicates.blocks("minecraft:air"))
           .where("C", Predicates.blocks("kubejs:reliable_naquadah_alloy_machine_casing"))
           .where("D", Predicates.blocks("kubejs:entropy_logic_casing"))
           .where("E", Predicates.blocks("kubejs:glitched_entropy_casing"))
           .where("F", Predicates.blocks("gtceu:fusion_casing_mk3").setMinGlobalLimited(10)
           .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
           .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
           .or(Predicates.autoAbilities(definition.getRecipeTypes())))
           .where("G", Predicates.blocks("kubejs:entropy_well_coil"))
           .where("H", Predicates.blocks("kubejs:controlled_ruin_lens"))
           .where("I", Predicates.blocks("kubejs:glitched_fusion_casing"))
           .where("J", Predicates.blocks("gtceu:neutronium_frame"))
           .where("K", Predicates.blocks("gtceu:fusion_casing"))
           .where("L", Predicates.blocks("gtceu:fusion_casing_mk2"))
           .where("M", Predicates.blocks("gtceu:robust_machine_casing"))
           .where("N", Predicates.blocks("gtceu:fusion_coil"))
           .where("O", Predicates.blocks("gtceu:tungsten_steel_frame"))
           .where("P", Predicates.blocks("kubejs:supercooled_reactor_core"))
           .where("Q", Predicates.blocks("minecraft:dirt"))
           .where('R', Predicates.controller(Predicates.blocks(definition.get())))


        .build()
)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing_mk3", "gtceu:block/multiblock/fusion_reactor", false)
    
}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
