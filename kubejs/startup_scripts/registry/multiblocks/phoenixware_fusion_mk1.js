GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk1')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(1, 1, 4, 4)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk1', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk1')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_PERFECT_SUBTICK])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()  
        .aisle("AAAAAAAABBCCCBBAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "FAAAAAAABBCCCBBAAAAAAAA")
        .aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
        .aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
        .aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAABBBBBBBBBBBBBBBBBAAA")
        .aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AABBBBBBBBBBBBBBBBBBBAA")
        .aisle("AABBBBBBBBIIIBBBBBBBBAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAHHAAAHHAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AABBBBBBBBIIIBBBBBBBBAA")
        .aisle("ABBBBBBBBIIJIIBBBBBBBBA", "AFAAAAAAHHAAAHHAAAAAAGA", "AFAAAAAHAAHHHAAHAAAAAGA", "AFAAAAAAHHAAAHHAAAAAAGA", "ABBBBBBBBIIEIIBBBBBBBBA")
        .aisle("ABBBBBBBIIJKJIIBBBBBBBA", "AFAAAAAHAAAAAAAHAAAAAGA", "AFAAAAHLHHAMANNLHAAAAGA", "AFAAAAAHAAAAAAAHAAAAAGA", "ABBBBBBBIIEKEIIBBBBBBBA")
        .aisle("BBBBBBBIIEKKKEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHMAAMAAMHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEKKKEIIBBBBBBB")
        .aisle("BBBBBBIIEKKKKKEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAMAMAMAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEKKKKKEIIBBBBBB")
        .aisle("CBBBBIIEKKKCKKKEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAO", "EAAAHAHAAAMMMAAAHAHAAAO", "EAAAAHAAAAAAAAAAAHAAAAO", "CBBBBIIEKKKCKKKEIIBBBBC")
        .aisle("CBBBBIEKKKCCCKKKEIBBBBC", "EAAAAHAAAAAMAAAAAHAAAAO", "EAAAHAHMMMMPMMMMHAHAAAO", "EAAAAHAAAAAMAAAAAHAAAAO", "CBBBBIEKKKCCCKKKEIBBBBC")
        .aisle("CBBBBIIEKKKCKKKEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAO", "EAAAHAHAAAMMMAAAHAHAAAO", "EAAAAHAAAAAAAAAAAHAAAAO", "CBBBBIIEKKKCKKKEIIBBBBC")
        .aisle("BBBBBBIIEKKKKKEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAMAMAMAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEKKKKKEIIBBBBBB")
        .aisle("BBBBBBBIIEKKKEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHMAAMAAMHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEKKKEIIBBBBBBB")
        .aisle("ABBBBBBBIIEKEIIBBBBBBBA", "AFAAAAAHAAAAAAAHAAAAAGA", "AFAAAAHLHHAMAHHLHAAAAGA", "AFAAAAAHAAAAAAAHAAAAAGA", "ABBBBBBBIIEKEIIBBBBBBBA")
        .aisle("ABBBBBBBBIIEIIBBBBBBBBA", "AFAAAAAAHHAAAHHAAAAAAGA", "AFAAAAAHAAHHHAAHAAAAAGA", "AFAAAAAAHHAAAHHAAAAAAGA", "ABBBBBBBBIIEIIBBBBBBBBA")
        .aisle("AABBBBBBBBIIIBBBBBBBBAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAHHAAAHHAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AABBBBBBBBIIIBBBBBBBBAA")
        .aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AABBBBBBBBBBBBBBBBBBBAA")
        .aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAABBBBBBBBBBBBBBBBBAAA")
        .aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
        .aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
        .aisle("AAAAAAAABBCCCBBAAAAAAAB", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDE@EDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAABBCCCBBAAAAAAAB")
                .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                .where("A", Predicates.blocks("minecraft:air"))
   .where("B", Predicates.blocks("kubejs:strongest_rhodium_plated_machne_casing"))
   .where("C", Predicates.blocks("kubejs:unstable_logic"))
   .where("D", Predicates.blocks("kubejs:phoenix_enriched_naquad_casing"))
   .where("E", Predicates.blocks("gtceu:fusion_casing_mk2"))
   .where("F", Predicates.blocks("gtceu:fusion_coil"))
   .where("G", Predicates.blocks("gtceu:fusion_glass"))
   .where("H", Predicates.blocks("kubejs:quasi_stable_fusion_casing"))
   .where("I", Predicates.blocks("gtceu:tritanium_frame"))
   .where("2", Predicates.blocks("gtceu:fusion_casing")
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
                .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                .or(Predicates.autoAbilities(definition.getRecipeTypes())))
   .where("K", Predicates.blocks("gtceu:robust_machine_casing"))
   .where("L", Predicates.blocks("gtceu:superconducting_coil"))
   .where("M", Predicates.blocks("gtceu:tungsten_steel_frame"))
   .where("N", Predicates.blocks("kubejs:quantum_stable_fusion_casing"))
   .where("O", Predicates.blocks("gtceu:fusion_casing_mk3"))
   .where("P", Predicates.blocks("kubejs:supercooled_reactor_core"))


        .build()
)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing", "gtceu:block/multiblock/fusion_reactor", false)
    
}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
