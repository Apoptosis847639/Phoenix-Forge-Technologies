const $FusionReactorMachine = Java.loadClass("com.gregtechceu.gtceu.common.machine.multiblock.electric.FusionReactorMachine")

GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk1')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(0, 0, 2, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk1', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UIV))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk1')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT, MachineModifiers.FUSION_REACTOR])
        .appearanceBlock(() => Block.getBlock("kubejs:strongest_rhodium_plated_machne_casing"))
        .pattern(definition => FactoryBlockPattern.start()  
.aisle("########BBCCCBB########", "########DDEEEDD########", "########DDEEEDD########", "########DDEEEDD########", "########BBCCCBB########")
.aisle("######BBBBBBBBBBB######", "######FFAAAAAAAFF######", "######FFAAAAAAAFF######", "######FFAAAAAAAFF######", "######BBBBBBBBBBB######")
.aisle("####BBBBBBBBBBBBBBB####", "####GGAAAAAAAAAAAGG####", "####GGAAAAAAAAAAAGG####", "####GGAAAAAAAAAAAGG####", "####BBBBBBBBBBBBBBB####")
.aisle("###BBBBBBBBBBBBBBBBB###", "###GAAAAAAAAAAAAAAAG###", "###GAAAAAAAAAAAAAAAG###", "###GAAAAAAAAAAAAAAAG###", "###BBBBBBBBBBBBBBBBB###")
.aisle("##BBBBBBBBBBBBBBBBBBB##", "##GAAAAAAAAAAAAAAAAAG##", "##GAAAAAAAHHHAAAAAAAG##", "##GAAAAAAAAAAAAAAAAAG##", "##BBBBBBBBBBBBBBBBBBB##")
.aisle("##BBBBBBBBIIIBBBBBBBB##", "##GAAAAAAAHHHAAAAAAAG##", "##GAAAAAHHAAAHHAAAAAG##", "##GAAAAAAAHHHAAAAAAAG##", "##BBBBBBBBIIIBBBBBBBB##")
.aisle("#BBBBBBBBIIEIIBBBBBBBB#", "#FAAAAAAHHAAAHHAAAAAAG#", "#FAAAAAHAAHHHAAHAAAAAG#", "#FAAAAAAHHAAAHHAAAAAAG#", "#BBBBBBBBIIEIIBBBBBBBB#")
.aisle("#BBBBBBBIIEJEIIBBBBBBB#", "#FAAAAAHAAAAAAAHAAAAAG#", "#FAAAAHFHHAKAHHFHAAAAG#", "#FAAAAAHAAAAAAAHAAAAAG#", "#BBBBBBBIIEJEIIBBBBBBB#")
.aisle("BBBBBBBIIEJJJEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHKAAKAAKHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEJJJEIIBBBBBBB")
.aisle("BBBBBBIIEJJJJJEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAKAKAKAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEJJJJJEIIBBBBBB")
.aisle("CBBBBIIEJJJCJJJEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAE", "EAAAHAHAAAKKKAAAHAHAAAE", "EAAAAHAAAAAAAAAAAHAAAAE", "CBBBBIIEJJJCJJJEIIBBBBC")
.aisle("CBBBBIEJJJCCCJJJEIBBBBC", "EAAAAHAAAAAKAAAAAHAAAAE", "EAAAHAHKKKKLKKKKHAHAAAE", "EAAAAHAAAAAKAAAAAHAAAAE", "CBBBBIEJJJCCCJJJEIBBBBC")
.aisle("CBBBBIIEJJJCJJJEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAE", "EAAAHAHAAAKKKAAAHAHAAAE", "EAAAAHAAAAAAAAAAAHAAAAE", "CBBBBIIEJJJCJJJEIIBBBBC")
.aisle("BBBBBBIIEJJJJJEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAKAKAKAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEJJJJJEIIBBBBBB")
.aisle("BBBBBBBIIEJJJEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHKAAKAAKHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEJJJEIIBBBBBBB")
.aisle("#BBBBBBBIIEJEIIBBBBBBB#", "#FAAAAAHAAAAAAAHAAAAAG#", "#FAAAAHFHHAKAHHFHAAAAG#", "#FAAAAAHAAAAAAAHAAAAAG#", "#BBBBBBBIIEJEIIBBBBBBB#")
.aisle("#BBBBBBBBIIEIIBBBBBBBB#", "#FAAAAAAHHAAAHHAAAAAAG#", "#FAAAAAHAAHHHAAHAAAAAG#", "#FAAAAAAHHAAAHHAAAAAAG#", "#BBBBBBBBIIEIIBBBBBBBB#")
.aisle("##BBBBBBBBIIIBBBBBBBB##", "##GAAAAAAAHHHAAAAAAAG##", "##GAAAAAHHAAAHHAAAAAG##", "##GAAAAAAAHHHAAAAAAAG##", "##BBBBBBBBIIIBBBBBBBB##")
.aisle("##BBBBBBBBBBBBBBBBBBB##", "##GAAAAAAAAAAAAAAAAAG##", "##GAAAAAAAHHHAAAAAAAG##", "##GAAAAAAAAAAAAAAAAAG##", "##BBBBBBBBBBBBBBBBBBB##")
.aisle("###BBBBBBBBBBBBBBBBB###", "###GAAAAAAAAAAAAAAAG###", "###GAAAAAAAAAAAAAAAG###", "###GAAAAAAAAAAAAAAAG###", "###BBBBBBBBBBBBBBBBB###")
.aisle("####BBBBBBBBBBBBBBB####", "####GGAAAAAAAAAAAGG####", "####GGAAAAAAAAAAAGG####", "####GGAAAAAAAAAAAGG####", "####BBBBBBBBBBBBBBB####")
.aisle("######BBBBBBBBBBB######", "######FFAAAAAAAFF######", "######FFAAAAAAAFF######", "######FFAAAAAAAFF######", "######BBBBBBBBBBB######")
.aisle("########BBCCCBB########", "########DDEEEDD########", "########DDENEDD########", "########DDEEEDD########", "########BBCCCBB########")
   .where("A", Predicates.blocks("minecraft:air"))
   .where('#', Predicates.any())
   .where("B", Predicates.blocks("kubejs:strongest_rhodium_plated_machne_casing"))
   .where("C", Predicates.blocks("gtceu:advanced_computer_casing"))
   .where("D", Predicates.blocks("gtceu:computer_casing"))
   .where("E", Predicates.blocks("gtceu:fusion_casing").setMinGlobalLimited(10)
   .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
   .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
   .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS))
   .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
   .or(Predicates.blocks(PartAbility.INPUT_ENERGY.getBlocks(GTValues.ZPM).toArray()).setMaxGlobalLimited(2)))
   .where("F", Predicates.blocks("gtceu:superconducting_coil"))
   .where("G", Predicates.blocks("gtceu:fusion_glass"))
   .where("H", Predicates.blocks("kubejs:quantum_stable_fusion_casing"))
   .where("I", Predicates.blocks("gtceu:naquadah_alloy_frame"))
   .where("J", Predicates.blocks("gtceu:robust_machine_casing"))
   .where("K", Predicates.blocks("gtceu:tungsten_steel_frame"))
   .where("L", Predicates.blocks("kubejs:supercooled_reactor_core"))
   .where('N', Predicates.controller(Predicates.blocks(definition.get())))
.build()
)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing", "gtceu:block/multiblock/fusion_reactor", false)
    
});
