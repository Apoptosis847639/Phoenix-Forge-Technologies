GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(0, 0, 2, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UIV))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk2')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_PERFECT])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()  
        .aisle("AAAAAAAABBCCCBBAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAABBCCCBBAAAAAAAA")
.aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
.aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
.aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAABBBBBBBBBBBBBBBBBAAA")
.aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AABBBBBBBBBBBBBBBBBBBAA")
.aisle("AABBBBBBBBJJJBBBBBBBBAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAIIAAAIIAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AABBBBBBBBJJJBBBBBBBBAA")
.aisle("ABBBBBBBBJJFJJBBBBBBBBA", "AGAAAAAAIIAAAIIAAAAAAGA", "AGAAAAAIAAIIIAAIAAAAAGA", "AGAAAAAAIIAAAIIAAAAAAGA", "ABBBBBBBBJJFJJBBBBBBBBA")
.aisle("ABBBBBBBJJFKFJJBBBBBBBA", "AGAAAAAIAAAAAAAIAAAAAGA", "AGAAAAILIIAMAIILIAAAAGA", "AGAAAAAIAAAAAAAIAAAAAGA", "ABBBBBBBJJFKFJJBBBBBBBA")
.aisle("BBBBBBBJJFKKKFJJBBBBBBB", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIMAAMAAMIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "BBBBBBBJJFKKKFJNBBBBBBB")
.aisle("BBBBBBJJFKKKKKFJJBBBBBB", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIAMAMAMAIAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "BBBBBBJJFKKKKKFJJBBBBBB")
.aisle("CBBBBJJFKKKCKKKFJJBBBBC", "FAAAAIAAAAAAAAAAAIAAAAF", "FAAAIAIAAAMMMAAAIAIAAAF", "FAAAAIAAAAAAAAAAAIAAAAF", "CBBBBJJFKKKCKKKFJJBBBBC")
.aisle("CBBBBJFKKKCCCKKKFJBBBBC", "FAAAAIAAAAAMAAAAAIAAAAF", "FAAAIAIMMMMOMMMMIAIAAAF", "FAAAAIAAAAAMAAAAAIAAAAF", "CBBBBJFKKKCCCKKKFJBBBBC")
.aisle("CBBBBJJFKKKCKKKFJJBBBBC", "FAAAAIAAAAAAAAAAAIAAAAF", "FAAAIAIAAAMMMAAAIAIAAAF", "FAAAAIAAAAAAAAAAAIAAAAF", "CBBBBJJFKKKCKKKFJJBBBBC")
.aisle("BBBBBBJJFKKKKKFJJBBBBBB", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIAMAMAMAFAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "BBBBBBJJFKKKKKFJJBBBBBB")
.aisle("BBBBBBBJJFKKKFJJBBBBBBB", "EAAAAAIAAAAAAAAAIAAAAAE", "EAAAAIAIMAAMAAMFAIAAAAE", "EAAAAAIAAAAAAAAAIAAAAAE", "BBBBBBBJJFKKKFJJBBBBBBB")
.aisle("ABBBBBBBJJFKFJJBBBBBBBA", "AGAAAAAIAAAAAAAIAAAAAGA", "AGAAAAILIIAMAIILIAAAAGA", "AGAAAAAIAAAAAAAIAAAAAGA", "ABBBBBBBJJFKFJJBBBBBBBA")
.aisle("ABBBBBBBBJJFJJBBBBBBBBA", "AGAAAAAAIIAAAIIAAAAAAGA", "AGAAAAAIAAIIIAAIAAAAAGA", "AGAAAAAAIIAAAIIAAAAAAGA", "ABBBBBBBBJJFJJBBBBBBBBA")
.aisle("AABBBBBBBBJJJBBBBBBBBAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAIIAAAIIAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AABBBBBBBBJJJBBBBBBBBAA")
.aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AAHAAAAAAAIIIAAAAAAAHAA", "AAHAAAAAAAAAAAAAAAAAHAA", "AABBBBBBBBBBBBBBBBBBBAA")
.aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAAHAAAAAAAAAAAAAAAHAAA", "AAABBBBBBBBBBBBBBBBBAAA")
.aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAAHHAAAAAAAAAAAHHAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
.aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAAGGAAAAAAAGGAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
.aisle("AAAAAAAABBCCCBBAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAAEEFQFEEAAAAAAAA", "AAAAAAAAEEFFFEEAAAAAAAA", "AAAAAAAABBCCCBBAAAAAAAA")
   .where("A", Predicates.blocks("minecraft:air"))
   .where("B", Predicates.blocks("kubejs:reliable_naquadah_alloy_machine_casing"))
   .where("C", Predicates.blocks("kubejs:unstable_logic"))
   .where("E", Predicates.blocks("kubejs:phoenix_enriched_naquad_casing"))
   .where("F", Predicates.blocks("gtceu:fusion_casing_mk2").setMinGlobalLimited(10)
   .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
   .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
   .or(Predicates.autoAbilities(definition.getRecipeTypes())))
   .where("G", Predicates.blocks("kubejs:phoenix_ignition_matrix"))
   .where("H", Predicates.blocks("kubejs:ashglass_viewing_panel"))
   .where("I", Predicates.blocks("kubejs:quasi_stable_fusion_casing"))
   .where("J", Predicates.blocks("gtceu:tritanium_frame"))
   .where("K", Predicates.blocks("gtceu:robust_machine_casing"))
   .where("L", Predicates.blocks("gtceu:superconducting_coil"))
   .where("M", Predicates.blocks("gtceu:tungsten_steel_frame"))
   .where("N", Predicates.blocks("gtceu:phoenix_enriched_tritanium_frame"))
   .where("O", Predicates.blocks("kubejs:supercooled_reactor_core"))
   .where('Q', Predicates.controller(Predicates.blocks(definition.get())))
        .build()
)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing_mk2", "gtceu:block/multiblock/fusion_reactor", false)
    
}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
