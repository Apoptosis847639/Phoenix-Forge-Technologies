GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(0, 0, 2, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UIV))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk2')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_PERFECT, MachineModifiers.FUSION_REACTOR])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()  
        .aisle("BBBBBBBBCCDDDCCBBBBBBBB", "BBBBBBBBEEGGGEEBBBBBBBB", "BBBBBBBBEEGGGEEBBBBBBBB", "BBBBBBBBEEGGGEEBBBBBBBB", "BBBBBBBBCCDDDCCBBBBBBBB")
        .aisle("BBBBBBCCCCCCCCCCCBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBCCCCCCCCCCCBBBBBB")
        .aisle("BBBBCCCCCCCCCCCCCCCBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBCCCCCCCCCCCCCCCBBBB")
        .aisle("BBBCCCCCCCCCCCCCCCCCBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBCCCCCCCCCCCCCCCCCBBB")
        .aisle("BBCCCCCCCCCCCCCCCCCCCBB", "BBIAAAAAAAAAAAAAAAAAIBB", "BBIAAAAAAAJJJAAAAAAAIBB", "BBIAAAAAAAAAAAAAAAAAIBB", "BBCCCCCCCCCCCCCCCCCCCBB")
        .aisle("BBCCCCCCCCKKKCCCCCCCCBB", "BBIAAAAAAAJJJAAAAAAAIBB", "BBIAAAAAJJAAAJJAAAAAIBB", "BBIAAAAAAAJJJAAAAAAAIBB", "BBCCCCCCCCKKKCCCCCCCCBB")
        .aisle("BCCCCCCCCKKGKKCCCCCCCCB", "BHAAAAAAJJAAAJJAAAAAAHB", "BHAAAAAJAAJJJAAJAAAAAHB", "BHAAAAAAJJAAAJJAAAAAAHB", "BCCCCCCCCKKGKKCCCCCCCCB")
        .aisle("BCCCCCCCKKGMGKKCCCCCCCB", "BHAAAAAJAAAAAAAJAAAAAHB", "BHAAAAJNJJAOAJJNJAAAAHB", "BHAAAAAJAAAAAAAJAAAAAHB", "BCCCCCCCKKGMGKKCCCCCCCB")
        .aisle("CCCCCCCKKGMMMGKKCCCCCCC", "EAAAAAJAAAAAAAAAJAAAAAE", "EAAAAJAJOAAOAAOJAJAAAAE", "EAAAAAJAAAAAAAAAJAAAAAE", "CCCCCCCKKGMMMGKPCCCCCCC")
        .aisle("CCCCCCKKGMMMMMGKKCCCCCC", "EAAAAAJAAAAAAAAAJAAAAAE", "EAAAAJAJAOAOAOAJAJAAAAE", "EAAAAAJAAAAAAAAAJAAAAAE", "CCCCCCKKGMMMMMGKKCCCCCC")
        .aisle("DCCCCKKGMMMDMMMGKKCCCCD", "GAAAAJAAAAAAAAAAAJAAAAG", "GAAAJAJAAAOOOAAAJAJAAAG", "GAAAAJAAAAAAAAAAAJAAAAG", "DCCCCKKGMMMDMMMGKKCCCCD")
        .aisle("DCCCCKGMMMDDDMMMGKCCCCD", "GAAAAJAAAAAOAAAAAJAAAAG", "GAAAJAJOOOOQOOOOJAJAAAG", "GAAAAJAAAAAOAAAAAJAAAAG", "DCCCCKGMMMDDDMMMGKCCCCD")
        .aisle("DCCCCKKGMMMDMMMGKKCCCCD", "GAAAAJAAAAAAAAAAAJAAAAG", "GAAAJAJAAAOOOAAAJAJAAAG", "GAAAAJAAAAAAAAAAAJAAAAG", "DCCCCKKGMMMDMMMGKKCCCCD")
        .aisle("CCCCCCKKGMMMMMGKKCCCCCC", "EAAAAAJAAAAAAAAAJAAAAAE", "EAAAAJAJAOAOAOAGAJAAAAE", "EAAAAAJAAAAAAAAAJAAAAAE", "CCCCCCKKGMMMMMGKKCCCCCC")
        .aisle("CCCCCCCKKGMMMGKKCCCCCCC", "EAAAAAJAAAAAAAAAJAAAAAE", "EAAAAJAJOAAOAAOGAJAAAAE", "EAAAAAJAAAAAAAAAJAAAAAE", "CCCCCCCKKGMMMGKKCCCCCCC")
        .aisle("BCCCCCCCKKGMGKKCCCCCCCB", "BHAAAAAJAAAAAAAJAAAAAHB", "BHAAAAJNJJAOAJJNJAAAAHB", "BHAAAAAJAAAAAAAJAAAAAHB", "BCCCCCCCKKGMGKKCCCCCCCB")
        .aisle("BCCCCCCCCKKGKKCCCCCCCCB", "BHAAAAAAJJAAAJJAAAAAAHB", "BHAAAAAJAAJJJAAJAAAAAHB", "BHAAAAAAJJAAAJJAAAAAAHB", "BCCCCCCCCKKGKKCCCCCCCCB")
        .aisle("BBCCCCCCCCKKKCCCCCCCCBB", "BAIAAAAAAAJJJAAAAAAAIBB", "BAIAAAAAJJAAAJJAAAAAIBB", "BAIAAAAAAAJJJAAAAAAAIBB", "BBCCCCCCCCKKKCCCCCCCCBB")
        .aisle("BBCCCCCCCCCCCCCCCCCCCBB", "BAIAAAAAAAAAAAAAAAAAIBB", "BAIAAAAAAAJJJAAAAAAAIBB", "BAIAAAAAAAAAAAAAAAAAIBB", "BBCCCCCCCCCCCCCCCCCCCBB")
        .aisle("BBBCCCCCCCCCCCCCCCCCBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBIAAAAAAAAAAAAAAAIBBB", "BBBCCCCCCCCCCCCCCCCCBBB")
        .aisle("BBBBCCCCCCCCCCCCCCCBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBIIAAAAAAAAAAAIIBBBB", "BBBBCCCCCCCCCCCCCCCBBBB")
        .aisle("BBBBBBCCCCCCCCCCCBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBHHAAAAAAAHHBBBBBB", "BBBBBBCCCCCCCCCCCBBBBBB")
        .aisle("BBBBBBBBCCDDDCCBBBBBBBB", "BBBBBBBBEEGGGEEBBBBBBBB", "BBBBBBBBEEGSGEEBBBBBBBB", "BBBBBBBBEEGGGEEBBBBBBBB", "BBBBBBBBCCDDDCCBBBBBBBB")
           .where("A", Predicates.blocks("minecraft:air"))
           .where('B', Predicates.any())
           .where("C", Predicates.blocks("kubejs:reliable_naquadah_alloy_machine_casing"))
           .where("D", Predicates.blocks("kubejs:unstable_logic"))
           .where("E", Predicates.blocks("kubejs:phoenix_enriched_naquad_casing"))
           .where("G", Predicates.blocks("gtceu:fusion_casing_mk2").setMinGlobalLimited(10)
           .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
           .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
           .or(Predicates.autoAbilities(definition.getRecipeTypes())))
           .where("H", Predicates.blocks("kubejs:phoenix_ignition_matrix"))
           .where("I", Predicates.blocks("kubejs:ashglass_viewing_panel"))
           .where("J", Predicates.blocks("kubejs:quasi_stable_fusion_casing"))
           .where("K", Predicates.blocks("gtceu:tritanium_frame"))
           .where("M", Predicates.blocks("gtceu:robust_machine_casing"))
           .where("N", Predicates.blocks("gtceu:superconducting_coil"))
           .where("O", Predicates.blocks("gtceu:tungsten_steel_frame"))
           .where("P", Predicates.blocks("gtceu:phoenix_enriched_tritanium_frame"))
           .where("Q", Predicates.blocks("kubejs:supercooled_reactor_core"))
           .where('S', Predicates.controller(Predicates.blocks(definition.get())))


        .build()

)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing_mk2", "gtceu:block/multiblock/fusion_reactor", false)
    
}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
