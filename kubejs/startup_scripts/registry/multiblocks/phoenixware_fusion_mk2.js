GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2')
        .category('multiblock')
        .setEUIO('in') 
        .setMaxIOSize(1, 1, 4, 4)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
 
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('phoenixware_fusion_mk2', 'multiblock').machine((holder) => new $FusionReactorMachine(holder, GTValues.UV))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes('phoenixware_fusion_mk2')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_PERFECT_SUBTICK])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()  
        .aisle("AAAAAAAABBCCCBBAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAABBCCCBBAAAAAAAA")
.aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
.aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
.aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAABBBBBBBBBBBBBBBBBAAA")
.aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AABBBBBBBBBBBBBBBBBBBAA")
.aisle("AABBBBBBBBIIIBBBBBBBBAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAHHAAAHHAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AABBBBBBBBIIIBBBBBBBBAA")
.aisle("ABBBBBBBBIIEIIBBBBBBBBA", "AFAAAAAAHHAAAHHAAAAAAGA", "AFAAAAAHAAHHHAAHAAAAAGA", "AFAAAAAAHHAAAHHAAAAAAGA", "ABBBBBBBBIIEIIBBBBBBBBA")
.aisle("ABBBBBBBIIEJEIIBBBBBBBA", "AFAAAAAHAAAAAAAHAAAAAGA", "AFAAAAHFHHAKAHHFHAAAAGA", "AFAAAAAHAAAAAAAHAAAAAGA", "ABBBBBBBIIEJEIIBBBBBBBA")
.aisle("BBBBBBBIIEJJJEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHKAAKAAKHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEJJJEIIBBBBBBB")
.aisle("BBBBBBIIEJJJJJEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAKAKAKAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEJJJJJEIIBBBBBB")
.aisle("CBBBBIIEJJJCJJJEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAE", "EAAAHAHAAAKKKAAAHAHAAAE", "EAAAAHAAAAAAAAAAAHAAAAE", "CBBBBIIEJJJCJJJEIIBBBBC")
.aisle("CBBBBIEJJJCCCJJJEIBBBBC", "EAAAAHAAAAAKAAAAAHAAAAE", "EAAAHAHKKKKLKKKKHAHAAAE", "EAAAAHAAAAAKAAAAAHAAAAE", "CBBBBIEJJJCCCJJJEIBBBBC")
.aisle("CBBBBIIEJJJCJJJEIIBBBBC", "EAAAAHAAAAAAAAAAAHAAAAE", "EAAAHAHAAAKKKAAAHAHAAAE", "EAAAAHAAAAAAAAAAAHAAAAE", "CBBBBIIEJJJCJJJEIIBBBBC")
.aisle("BBBBBBIIEJJJJJEIIBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHAKAKAKAHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBIIEJJJJJEIIBBBBBB")
.aisle("BBBBBBBIIEJJJEIIBBBBBBB", "DAAAAAHAAAAAAAAAHAAAAAD", "DAAAAHAHKAAKAAKHAHAAAAD", "DAAAAAHAAAAAAAAAHAAAAAD", "BBBBBBBIIEJJJEIIBBBBBBB")
.aisle("ABBBBBBBIIEJEIIBBBBBBBA", "AFAAAAAHAAAAAAAHAAAAAGA", "AFAAAAHFHHAKAHHFHAAAAGA", "AFAAAAAHAAAAAAAHAAAAAGA", "ABBBBBBBIIEJEIIBBBBBBBA")
.aisle("ABBBBBBBBIIEIIBBBBBBBBA", "AFAAAAAAHHAAAHHAAAAAAGA", "AFAAAAAHAAHHHAAHAAAAAGA", "AFAAAAAAHHAAAHHAAAAAAGA", "ABBBBBBBBIIEIIBBBBBBBBA")
.aisle("AABBBBBBBBIIIBBBBBBBBAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAHHAAAHHAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AABBBBBBBBIIIBBBBBBBBAA")
.aisle("AABBBBBBBBBBBBBBBBBBBAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AAGAAAAAAAHHHAAAAAAAGAA", "AAGAAAAAAAAAAAAAAAAAGAA", "AABBBBBBBBBBBBBBBBBBBAA")
.aisle("AAABBBBBBBBBBBBBBBBBAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAAGAAAAAAAAAAAAAAAGAAA", "AAABBBBBBBBBBBBBBBBBAAA")
.aisle("AAAABBBBBBBBBBBBBBBAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAAGGAAAAAAAAAAAGGAAAA", "AAAABBBBBBBBBBBBBBBAAAA")
.aisle("AAAAAABBBBBBBBBBBAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAAFFAAAAAAAFFAAAAAA", "AAAAAABBBBBBBBBBBAAAAAA")
.aisle("AAAAAAAABBCCCBBAAAAAAAM", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAADDENEDDAAAAAAAA", "AAAAAAAADDEEEDDAAAAAAAA", "AAAAAAAABBCCCBBAAAAAAAA")
   .where("A", Predicates.blocks("minecraft:air"))
   .where("B", Predicates.blocks("kubejs:strongest_rhodium_plated_machne_casing"))
   .where("C", Predicates.blocks("gtceu:advanced_computer_casing"))
   .where("D", Predicates.blocks("gtceu:computer_casing"))
   .where("E", Predicates.blocks("gtceu:fusion_casing").setMinGlobalLimited(10)
   .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
   .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
   .or(Predicates.autoAbilities(definition.getRecipeTypes())))
   .where("F", Predicates.blocks("gtceu:superconducting_coil"))
   .where("G", Predicates.blocks("gtceu:fusion_glass"))
   .where("H", Predicates.blocks("kubejs:quantum_stable_fusion_casing"))
   .where("I", Predicates.blocks("gtceu:naquadah_alloy_frame"))
   .where("J", Predicates.blocks("gtceu:robust_machine_casing"))
   .where("K", Predicates.blocks("gtceu:tungsten_steel_frame"))
   .where("L", Predicates.blocks("kubejs:supercooled_reactor_core"))
   .where("M", Predicates.blocks("gtceu:neutronium_frame"))
   .where('N', Predicates.controller(Predicates.blocks(definition.get())))


        .build()
)
.workableCasingRenderer("gtceu:block/casings/fusion/fusion_casing_mk2", "gtceu:block/multiblock/fusion_reactor", false)
    
}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
