const CoilWorkableElectricMultiblockMachine = Java.loadClass("com.gregtechceu.gtceu.api.machine.multiblock.CoilWorkableElectricMultiblockMachine")
Java.loadClass("com.gregtechceu.gtceu.api.GTValues")
GTCEuStartupEvents.registry('gtceu:recipe_type', phoenixvine => {
    phoenixvine.create('emberwake_alloy_hearth')
        .category('multiblock')
        .setEUIO('in')
        .setMaxIOSize(4, 1, 0, 0)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ARC);
});
GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
const GCYMRecipeTypes = Java.loadClass("com.gregtechceu.gtceu.common.data.GCYMRecipeTypes") // Have to load it here because ALLOY_BLAST_RECIPES is not defined outside of the event
phoenixvine.create("emberwake_alloy_hearth", "multiblock")
    .machine((holder) => new CoilWorkableElectricMultiblockMachine(holder))
    .rotationState(RotationState.ALL)
    .recipeTypes(GCYMRecipeTypes.ALLOY_BLAST_RECIPES)
    .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, (machine, recipe) => GTRecipeModifiers.ebfOverclock(machine, recipe)])
    .appearanceBlock(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING)
    .pattern(definition => FactoryBlockPattern.start()   
    .aisle("BBCCCCCBB", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF")
    .aisle("BBBCCCBBB", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "FHFFFFFHF", "FFFFFFFFF", "FFFFFFFFF", "FIIFFFIIF", "FJJCCCJJF")
    .aisle("CBBBBBBBC", "FHKLLLKHF", "FHKLLLKHF", "FHKLLLKHF", "FHHJJJHHF", "FFHJJJHFF", "FFMMMMMFF", "FFHJJJHFF", "FIHHHHHIF", "FJJCCCJJF")
    .aisle("CCBBBBBCC", "FFLAAALFF", "FFLAIALFF", "FFLAAALFF", "FFJHHHJFF", "FFJEEEJFF", "FFMEIEMFF", "FFJEEEJFF", "FFHHHHHFF", "FCCMMMCCF")
    .aisle("CCBBBBBCC", "FFLAIALFF", "FFNIOINFF", "FFLAIALFF", "FFJHHHJFF", "FFJEIEJFF", "FFMIPIMFF", "FFJEIEJFF", "FFHHHHHFF", "FCCMMMCCF")
    .aisle("CCBBBBBCC", "FFLAAALFF", "FFLAIALFF", "FFLAAALFF", "FFJHHHJFF", "FFJEEEJFF", "FFMEIEMFF", "FFJEEEJFF", "FFHHHHHFF", "FCCMMMCCF")
    .aisle("CBBBBBBBC", "FHKLLLKHF", "FHKLQLKHF", "FHKLLLKHF", "FHHJJJHHF", "FFHJJJHFF", "FFMMMMMFF", "FFHJJJHFF", "FIHHHHHIF", "FJJCCCJJF")
    .aisle("BBBCCCBBB", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "FHFFFFFHF", "FFFFFFFFF", "FFFFFFFFF", "FIIFFFIIF", "FJJCCCJJF")
    .aisle("BBCCCCCBB", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF")
       .where("A", Predicates.blocks("minecraft:air"))
       .where("B", Predicates.blocks("kubejs:reliable_naquadah_alloy_machine_casing"))
       .where("C", Predicates.blocks("gtceu:neutronium_frame"))
       .where("D", Predicates.blocks("kubejs:unstable_logic"))
       .where("E", Predicates.blocks("kubejs:plasma_resistant"))
       .where('F', Predicates.any())
       .where("G", Predicates.blocks("kubejs:phoenix_enriched_naquad_casing"))
       .where("H", Predicates.blocks("gtceu:high_temperature_smelting_casing").setMinGlobalLimited(6)
.or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
.or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
.or(Predicates.autoAbilities(definition.getRecipeTypes())))
       .where("I", Predicates.blocks("gtceu:phoenix_enriched_naquad_frame"))
       .where("J", Predicates.heatingCoils())
       .where("K", Predicates.blocks("kubejs:heat_dissipating_coils"))
       .where("L", Predicates.blocks("kubejs:quasi_stable_fusion_casing"))
       .where("M", Predicates.blocks("gtceu:heat_vent"))
       .where("N", Predicates.blocks("kubejs:ashglass_viewing_panel"))
       .where("O", Predicates.blocks("kubejs:phoenix_ignition_matrix"))
       .where("P", Predicates.blocks("kubejs:supercooled_reactor_core"))
       .where('Q', Predicates.controller(Predicates.blocks(definition.get())))
        .build())
        .workableCasingRenderer('kubejs:block/reliable_naquadah_alloy_machine_casing', 'gtceu:block/multiblock/gcym/blast_alloy_smelter', false)

        const GTRecipeTypes = Java.loadClass("com.gregtechceu.gtceu.common.data.GTRecipeTypes")


// Atmospheric Accumulator
phoenixvine.create("atmospheric_accumulator", "multiblock")
.rotationState(RotationState.NON_Y_AXIS)
.recipeTypes(GTRecipeTypes.GAS_COLLECTOR_RECIPES)
.recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT])
.appearanceBlock(GCYMBlocks.CASING_CORROSION_PROOF)
.pattern(definition => FactoryBlockPattern.start()
    .aisle("CCCCC", "C   C", "CCCCC", "C   C", "CCCCC", "C   C", "CCCCC")
    .aisle("CCCCC", " GIG ", "CGGGC", " GIG ", "CCCCC", " GIG ", "CIIIC")
    .aisle("CCCCC", " IOI ", "CGOGC", " IOI ", "CCOCC", " IOI ", "CIOIC")
    .aisle("CCCCC", " GIG ", "CGGGC", " GIG ", "CCCCC", " GIG ", "CIIIC")
    .aisle("CC@CC", "C   C", "CCCCC", "C   C", "CCCCC", "C   C", "CCCCC")
    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
    .where("I", Predicates.blocks(GTBlocks.CASING_ENGINE_INTAKE.get()))
    .where("G", Predicates.blocks(GTBlocks.CASING_GRATE.get()))
    .where("O", Predicates.blocks(GTBlocks.CASING_TITANIUM_PIPE.get()))
    .where("C", Predicates.blocks(GCYMBlocks.CASING_CORROSION_PROOF.get()).setMinGlobalLimited(70)
        .or(Predicates.autoAbilities(definition.getRecipeTypes()))
        .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
        .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
    )
    .where(" ", Predicates.air())
    .build())
.workableCasingRenderer("gtceu:block/casings/gcym/corrosion_proof_casing",
    "gtceu:block/machines/gas_collector", false)
})






/**GTCEuStartupEvents.registry('gtceu:machine', phoenixvine => {
    phoenixvine.create('emberwake_alloy_hearth', 'multiblock')
    .machine((holder) => new CoilWorkableElectricMultiblockMachine(holder))
    .rotationState(RotationState.ALL)
    .recipeTypes(GCYMRecipeTypes.ALLOY_BLAST_RECIPES)
    .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, (machine, recipe) => GTRecipeModifiers.ebfOverclock(machine, recipe)])
    .appearanceBlock(GCYMBlocks.CASING_HIGH_TEMPERATURE_SMELTING)
        .pattern(definition => FactoryBlockPattern.start()   
        .aisle("BBCCCCCBB", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF")
        .aisle("BBBCCCBBB", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "FHFFFFFHF", "FFFFFFFFF", "FFFFFFFFF", "FIIFFFIIF", "FJJCCCJJF")
        .aisle("CBBBBBBBC", "FHKLLLKHF", "FHKLLLKHF", "FHKLLLKHF", "FHHJJJHHF", "FFHJJJHFF", "FFMMMMMFF", "FFHJJJHFF", "FIHHHHHIF", "FJJCCCJJF")
        .aisle("CCBBBBBCC", "FFLAAALFF", "FFLAIALFF", "FFLAAALFF", "FFJHHHJFF", "FFJEEEJFF", "FFMEIEMFF", "FFJEEEJFF", "FFHHHHHFF", "FCCMMMCCF")
        .aisle("CCBBBBBCC", "FFLAIALFF", "FFNIOINFF", "FFLAIALFF", "FFJHHHJFF", "FFJEIEJFF", "FFMIPIMFF", "FFJEIEJFF", "FFHHHHHFF", "FCCMMMCCF")
        .aisle("CCBBBBBCC", "FFLAAALFF", "FFLAIALFF", "FFLAAALFF", "FFJHHHJFF", "FFJEEEJFF", "FFMEIEMFF", "FFJEEEJFF", "FFHHHHHFF", "FCCMMMCCF")
        .aisle("CBBBBBBBC", "FHKLLLKHF", "FHKLQLKHF", "FHKLLLKHF", "FHHJJJHHF", "FFHJJJHFF", "FFMMMMMFF", "FFHJJJHFF", "FIHHHHHIF", "FJJCCCJJF")
        .aisle("BBBCCCBBB", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "EGHFFFHGE", "FHFFFFFHF", "FFFFFFFFF", "FFFFFFFFF", "FIIFFFIIF", "FJJCCCJJF")
        .aisle("BBCCCCCBB", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "DEFFFFFED", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF", "FFFFFFFFF")
           .where("A", Predicates.blocks("minecraft:air"))
           .where("B", Predicates.blocks("kubejs:reliable_naquadah_alloy_machine_casing"))
           .where("C", Predicates.blocks("gtceu:neutronium_frame"))
           .where("D", Predicates.blocks("kubejs:unstable_logic"))
           .where("E", Predicates.blocks("kubejs:plasma_resistant"))
           .where('F', Predicates.any())
           .where("G", Predicates.blocks("kubejs:phoenix_enriched_naquad_casing"))
           .where("H", Predicates.blocks("gtceu:high_temperature_smelting_casing").setMinGlobalLimited(6)
   .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
   .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
   .or(Predicates.autoAbilities(definition.getRecipeTypes())))
           .where("I", Predicates.blocks("gtceu:phoenix_enriched_naquad_frame"))
           .where("J", Predicates.blocks("gtceu:tritanium_coil_block"))
           .where("K", Predicates.blocks("kubejs:heat_dissipating_coils"))
           .where("L", Predicates.blocks("kubejs:quasi_stable_fusion_casing"))
           .where("M", Predicates.blocks("gtceu:heat_vent"))
           .where("N", Predicates.blocks("kubejs:ashglass_viewing_panel"))
           .where("O", Predicates.blocks("kubejs:phoenix_ignition_matrix"))
           .where("P", Predicates.blocks("kubejs:supercooled_reactor_core"))
           .where('Q', Predicates.controller(Predicates.blocks(definition.get())))
            .build())
            .workableCasingRenderer('kubejs:block/reliable_naquadah_alloy_machine_casing', 'gtceu:block/multiblock/fusion_reactor', false)
});*/
